// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace F16.Icp
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct KeyPress : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public KeyPress __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public F16.Icp.IcpKey Key { get { return (F16.Icp.IcpKey)__p.bb.GetSbyte(__p.bb_pos + 0); } }
  public long EventCounter { get { return __p.bb.GetLong(__p.bb_pos + 8); } }

  public static Offset<F16.Icp.KeyPress> CreateKeyPress(FlatBufferBuilder builder, F16.Icp.IcpKey Key, long EventCounter) {
    builder.Prep(8, 16);
    builder.PutLong(EventCounter);
    builder.Pad(7);
    builder.PutSbyte((sbyte)Key);
    return new Offset<F16.Icp.KeyPress>(builder.Offset);
  }
};


}
